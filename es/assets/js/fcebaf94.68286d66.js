"use strict";(self.webpackChunkrio_docs=self.webpackChunkrio_docs||[]).push([[8011],{6337:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=o(5893),s=o(1151);const i={title:"fonts",language:"en"},a=void 0,l={id:"config/fonts",title:"fonts",description:"Configure fonts used by the terminal.",source:"@site/docs/config/fonts.md",sourceDirName:"config",slug:"/config/fonts",permalink:"/rio/es/docs/config/fonts",draft:!1,unlisted:!1,editUrl:"https://github.com/raphamorim/rio/tree/main/docs/docs/config/fonts.md",tags:[],version:"current",frontMatter:{title:"fonts",language:"en"},sidebar:"tutorialSidebar",previous:{title:"env-vars",permalink:"/rio/es/docs/config/env-vars"},next:{title:"ignore-selection-foreground-color",permalink:"/rio/es/docs/config/ignore-selection-foreground-color"}},r={},c=[{value:"Extra fonts",id:"extra-fonts",level:2},{value:"Font features",id:"font-features",level:2},{value:"Default configuration",id:"default-configuration",level:2},{value:"Emojis",id:"emojis",level:2}];function f(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Configure fonts used by the terminal."}),"\n",(0,t.jsx)(n.p,{children:"Note: You can set different font families but Rio terminal\nwill always look for regular font bounds whene"}),"\n",(0,t.jsx)(n.p,{children:"You can also set family on root to overwrite all fonts."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[fonts]\nfamily = "cascadiacode"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"extra-fonts",children:"Extra fonts"}),"\n",(0,t.jsx)(n.p,{children:"You can also specify extra fonts to load:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[fonts]\nextras = [{ family = "Microsoft JhengHei" }]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"font-features",children:"Font features"}),"\n",(0,t.jsx)(n.p,{children:"In case you want to specify any font feature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[fonts]\nfeatures = ["ss02", "ss03", "ss05", "ss19"]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Note: Font features do not have support to live reload on configuration, so to reflect your changes, you will need to close and reopen Rio."}),"\n",(0,t.jsx)(n.h2,{id:"default-configuration",children:"Default configuration"}),"\n",(0,t.jsx)(n.p,{children:"The font configuration default:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[fonts]\nsize = 18\nfeatures = []\n\n[fonts.regular]\nfamily = "cascadiacode"\nstyle = "normal"\nweight = 400\n\n[fonts.bold]\nfamily = "cascadiacode"\nstyle = "normal"\nweight = 800\n\n[fonts.italic]\nfamily = "cascadiacode"\nstyle = "italic"\nweight = 400\n\n[fonts.bold-italic]\nfamily = "cascadiacode"\nstyle = "italic"\nweight = 800\n'})}),"\n",(0,t.jsx)(n.h2,{id:"emojis",children:"Emojis"}),"\n",(0,t.jsx)(n.p,{children:"You can also specify which emoji font you would like to use, by default will be loaded a built-in Noto Emoji."}),"\n",(0,t.jsx)(n.p,{children:"In case you would like to change:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Apple\n# [fonts.emoji]\n# family = "Apple Color Emoji"\n\n# In case you have Noto Color Emoji installed\n# [fonts.emoji]\n# family = "Noto Color Emoji"\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>l,a:()=>a});var t=o(7294);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);