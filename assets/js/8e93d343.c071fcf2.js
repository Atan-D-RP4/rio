"use strict";(self.webpackChunkrio_docs=self.webpackChunkrio_docs||[]).push([[4043],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),m=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=m(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=m(t),d=o,f=u["".concat(l,".").concat(d)]||u[d]||p[d]||a;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var m=2;m<a;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var r=t(7462),o=(t(7294),t(3905));const a={layout:"docs",class:"docs",title:"Command-line interface",language:"en"},i=void 0,c={unversionedId:"documentation/command-line-interface",id:"documentation/command-line-interface",title:"Command-line interface",description:"Command-line interface",source:"@site/docs/documentation/command-line-interface.md",sourceDirName:"documentation",slug:"/documentation/command-line-interface",permalink:"/rio/docs/documentation/command-line-interface",draft:!1,editUrl:"https://github.com/raphamorim/rio/tree/main/docs/docs/documentation/command-line-interface.md",tags:[],version:"current",frontMatter:{layout:"docs",class:"docs",title:"Command-line interface",language:"en"},sidebar:"tutorialSidebar",previous:{title:"Documentation",permalink:"/rio/docs/documentation/"},next:{title:"Configuration file",permalink:"/rio/docs/documentation/configuration-file"}},l={},m=[{value:"Command-line interface",id:"command-line-interface",level:2}],s={toc:m},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"command-line-interface"},"Command-line interface"),(0,o.kt)("p",null,"A command-line interface (CLI) is a means of interacting with a device or computer program with commands from a user or client, and responses from the device or program, in the form of lines of text. Rio terminal has a command-line interface that you can use for different purposes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ rio --help\nRio terminal app\n\nUsage: rio [OPTIONS]\n\nOptions:\n<p>  -e, --command <COMMAND>...  Command and args to execute (must be last argument)\n<p>  -h, --help                  Print help\n<p>  -V, --version               Print version\n\nThe options "-e" and "--command" executes the command and closes the terminal right way after the execution.\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ rio -e sleep 10\n")),(0,o.kt)("p",null,"You can also ",(0,o.kt)("span",{class:"keyword"},"RIO_LOG_LEVEL")," environment variable for filter logs on-demand, for example:"),(0,o.kt)("p",null,"$ RIO_LOG_LEVEL=debug rio -e echo 85"))}p.isMDXComponent=!0}}]);